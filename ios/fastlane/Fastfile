# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.28.3"

default_platform :ios

platform :ios do
  # before_all do
  #   # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  #   cocoapods
    
  # end

  # desc "Runs all the tests"
  # lane :test do
  #   scan
  # end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  # lane :beta do
  #   # match(type: "appstore") # more information: https://codesigning.guide
  #   gym # Build your app - more options available
  #   pilot

  #   # sh "your_script.sh"
  #   # You can also use other beta testing services here (run `fastlane actions`)
  # end

  lane :beta do
    get_certificates(
      development: false,
      username: "robot@nicework.company",
      team_id: "76Y FR39J99",
      team_name: "NiceWork OU",
      platform: "ios"
    )
    get_provisioning_profile(
      adhoc: false,
      development: false,
      app_identifier: 'company.nicework.eventdotpizza'
      output_path: 'secrets'
      cert_owner_name: 'Robot Nicework'
      filename: 'appstore.mobileprovision'
      platform: 'ios'
    )
    # disable_automatic_code_signing(path: "Runner.xcworkspace")
    # build_app
  
    # upload_to_testflight

    # On iOS an extra build is required since flutter build builds an
    # .app rather than archiving .ipas for release.

    # build_app(
    #   scheme: "Runner",
    #   export_options: {
    #     method: "app-store",
    #   }
    # )
    # enable_automatic_code_signing(path: "Runner.xcworkspace")
    # upload_to_testflight(skip_submission: true)
  end

  # desc "Deploy a new version to the App Store"
  # lane :release do
  #   # match(type: "appstore")
  #   # snapshot
  #   gym # Build your app - more options available
  #   deliver(force: true)
  #   # frameit
  # end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
